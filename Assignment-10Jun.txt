//Assignment:
1. Write a function filterRange(arr, a, b) that gets an array arr, looks for elements with values higher or equal to a and 
	lower or equal to b and return a result as an array.
	The function should not modify the array. It should return the new array.
	For instance:
	let arr = [5, 3, 8, 1];
	let filtered = filterRange(arr, 1, 4);
	console.log( filtered ); // 3,1 (matching values)
	console.log( arr ); // 5,3,8,1 (not modified)

2. Sort in decreasing order
	let arr = [5, 2, 1, -10, 8];
	// ... your code to sort it in decreasing order
	console.log( arr ); // 8, 5, 2, 1, -10
	
3. You have an array of user objects, each one has user.name. Write the code that converts it into an array of names.
	For example: [Hint: use array.map()]
	let p1 = {name: 'Shiva', salary: 50000};
	let p2 = {name: 'Ankit', salary: 100000};
	let p3 = {name: 'Akash', salary: 40000};
	let p4 = {name: 'Shivam', salary: 60000};
	let arrObj = [p1, p2, p3, p4];
	let names = /* ... your code */
	console.log( names ); // ['Shiva', 'Ankit', 'Akash', 'Shivam']

4. Write the function sortByAge(users) that gets an array of objects with the age property and sorts them by age.
For instance:
	let p1 = {name: 'Shiva', salary: 50000};
	let p2 = {name: 'Ankit', salary: 100000};
	let p3 = {name: 'Akash', salary: 40000};
	let p4 = {name: 'Shivam', salary: 60000};
	let arrObj = [p1, p2, p3, p4];
	sortByAge(arrObj);
	// now: [p3, p1, p4, p2]
	alert(arr[0].name); // Akash
	alert(arr[1].name); // Shiva
	alert(arr[2].name); // Shivam
	alert(arr[3].name); // Ankit